
to setup
  ca
  reset-ticks
  
  if use-seed? [
    random-seed seed
  ]
  
  set num-pops 3
  set pals ["OrRd" "PuBu" "BuGn" "BuPu"]
  
  let ds gis:load-dataset "wasp-suitability.asc"
  gis:apply-raster ds capacity
  ask patches [
    ifelse (capacity >= 0)
    [ set capacity capacity * 100 ]
    [ set capacity -1 ]
  ]
  set capacities sort remove-duplicates [capacity] of patches

  set ds gis:load-dataset "roads-oblique.asc"
  gis:apply-raster ds road?
  ask patches [
    set road? road? >= 0
  ]
  set the-roads patches with [road?]
  ask the-roads [
    sprout-roads 1 [
      set color grey - 2
      set shape "square"
      set size 0.8
    ]
  ]

  set the-land patches with [capacity >= 0]
  set the-habitable-land the-land with [capacity > 0]
  set the-sea patches with [capacity < 0]

  set pop-history []
  set wild-history []
  set gm-history []
  
  setup-patch-populations
  update-populations
  ask the-habitable-land [
    sprout-vizs 1 [
      set shape "circle"
    ]
  ]
  color-patches
  ask the-sea [set pcolor cyan + 4]
  
  set distances array:from-list n-values 350 [i -> 0]

  renew-plots
end


to setup-patch-populations
  ask patches [
    set pops n-values num-pops [ i -> 0 ]
    set next-pops n-values num-pops [ i -> 0 ]
  ]
  ask the-land [
    repeat int (capacity * random-normal init-mean-occ init-sd-occ) [ 
      let species ifelse-value (random-float 1 < init-prop-gm) [1] [0]
      set next-pops replace-item species next-pops (item species next-pops + 1)
    ]
    set init-pops next-pops
    set init-pop sum next-pops
  ]
end
  

to make-movie [n]
  vid:start-recorder
  setup
  vid:record-interface
  repeat n [
    go
    vid:record-interface
  ]
  vid:save-recording "foo.mp4"
end